
<!DOCTYPE>
<html class="no-js">
<head>
<!-- Purpose: develop a game using kinetic.js, html 5 and existing javascript frameworks-->
<!-- Coded by: twitter @ginhanlabs -->
<!-- Website: http://ginhanlabs.blogspot.com -->
 
    <script src="jquery-1.8.2.min.js" type="text/javascript"></script>
    <script src="kinetic-v4.0.3.js" type="text/javascript"></script>
  
    <title></title>
    <style>
      
    @media screen
    {
        .hide {display:none}
         .absolute{position:absolute;}
          .alignCenter {text-align:center}
         .menu a {border:1px solid red;padding:1em;display:block;width:5em;text-decoration:none;margin:auto;margin-bottom:.6em;}
         #btnCalc {left:565;top:455;}
         #keyPadRow{left:430;top:340;}
         .numKeys {padding:.5em;margin-left:.2em}
    }
  
    </style>
    <script type="text/javascript">
 
 
        var snackImage = new Image();
        snackImage.src = "images/snack.png";
        snackImage.width = "30";
        snackImage.height = "30";
 
 
        var snackImage2 = new Image();
        snackImage2.src = "images/snack2.png";
        snackImage2.width = "30";
        snackImage2.height = "30";
        
         var clearImage = new Image();
        clearImage.src = "images/buttonClear.png";
        clearImage.width = "60";
        clearImage.height = "58";
        
        var nextImage = new Image();
        nextImage.src = "images/buttonNext.png";
        nextImage.width = "60";
        nextImage.height = "58";
 
        var snackArray = new Array();
        var nPadArray = new Array();
        var jar;
        var jarImage = new Image();
        jarImage.src = "images/jar.png";
        jarImage.width = "90";
        jarImage.height = "108";
 
        var face;
        var faceImage = new Image();
        faceImage.src = "images/face.gif";
        faceImage.width = "150";
        faceImage.height = "132";
        
        var munchingFace;
        var munchingFaceImage = new Image();
        munchingFaceImage.src = "images/faces.gif";
        munchingFaceImage.width = "150";
        munchingFaceImage.height = "132";

         var character;
         var characterImage = new Image();
         characterImage.src = "images/character.gif";
         characterImage.width = "240";
         characterImage.height = "334";

        var stage;
        var mathProblemLayer = new Kinetic.Layer();
        var commentLayer = new Kinetic.Layer();
        var snackLayer = new Kinetic.Layer();
        var jarLayer    = new Kinetic.Layer();
        var faceLayer  = new Kinetic.Layer();
        var characterLayer = new Kinetic.Layer();
        var munchingFaceLayer = new Kinetic.Layer();
        var nPadLayer = new Kinetic.Layer();
        var txtAnswerLayer = new Kinetic.Layer();
        var comments;
        var txtMathProblem;
        var txtAnswer;
       
        var calcBtn;
       
var mathObj = {
            x: 430,
            y: 60,
            ops : "",
            num1 : "",
            num2 : "",
            level : 1,
            score : 0,
           // counter : 0,
            answer : 0,
            eaten    : 0,
            controlBtnX : 435,
            controlBtnY : 385,
            nPress: "",
            numClicks : 0,  // txtAnswer can't have more than 10 digit
            maxClicks : 10
        }
 
     function Init() {
 
            stage = new Kinetic.Stage({
                width: 800,
                height: 500,
                container: "canvasContainer"
            });
 			
           DoBackground();
           SetFace();
           SetJar();
           SetAnswerArea();
           SetLayers();
           DoMath();
           SetCommentBox();
           stage.draw();
        }
 
 
        function SetLayers(){
            txtMathProblem = GenerateText("", 400, 15, "green", 36, "bold", 400);
           
            mathProblemLayer.add(txtMathProblem);
            stage.add(mathProblemLayer);
            }
 
        function BuildControls(){
     
          for (var k=0; k <=9; k++){
        	    
                var input = $('<input>', {
                    id: 'numKey' + k,
                    type: 'button',
                    value: k,
                    class : "numKeys",
                    click: function(e){
                      
                         if (mathObj.numClicks >= mathObj.maxClicks){
                           mathObj.numClicks = 0;
                           txtAnswer.setText(this.value);
                        }
                        else
                        {
                            mathObj.numClicks++;
                            txtAnswer.setText(txtAnswer.getText() + this.value);
                            
                        }
                        stage.draw();
                    }
                   
                });
                $("#keyPadRow").append(input);
            
             }
             
            // clearButton
            var buttonClear = new Kinetic.Image({
                    id: "btnClear",
                    x: mathObj.controlBtnX,
                    y: mathObj.controlBtnY,
                    image: clearImage
                });
            
            txtAnswerLayer.add(buttonClear);
            stage.add(txtAnswerLayer);
            buttonClear.on("click",function(){
                txtAnswer.setText("");
                mathObj.numClicks = 0;
                stage.draw();
            })
            
            // next button
            var buttonNext = new Kinetic.Image({
                    id: "btnNext",
                    x: mathObj.controlBtnX + 280,
                    y: mathObj.controlBtnY,
                    image: nextImage
                });
            
            txtAnswerLayer.add(buttonNext);
            stage.add(txtAnswerLayer);
            buttonNext.on("click",function(){
               // txtAnswer.setText("");
                ClearSnacks();
            })
              
        }

        function SetAnswerArea() {
        	txtAnswer = GenerateText("", 502, 390, "orange", 14, "normal", 200);
        	txtAnswer.setPadding(10);
        	txtAnswer.setHeight(45);
        	txtAnswer.setStrokeWidth(1);
        	txtAnswer.setFill("White");
        	txtAnswerLayer.add(txtAnswer);
        	stage.add(txtAnswerLayer);
        	BuildControls();
         }
 
        function SetSnacks2(amount, amount2) {
         var dy = mathObj.y;
            var maxPerRow = 7;
            var tempImg = new Image();
            var startingX = dx = mathObj.x;
            var indx = 0;
            var snackName = "";
         
            for (var z = amount; z > 0; z--) {
                
                if (indx % maxPerRow == 0) {
                        dy += 50;
                        dx = startingX;
                    }
                    else {
                        dx += 50;
                    }
                
                if (z <= amount2) {
                    tempImg = snackImage2;
                    amount2--;
                    snackName = "jarsnack" + z;
                }
                else {
                    tempImg = snackImage;
                    snackName = "snack" + z;
                }
               
            snackArray[z] = new Kinetic.Image({
                    id: snackName,
                    x: dx,
                    y: dy,
                    image: tempImg,
                    draggable: false,
                  
                });
           
                snackLayer.add(snackArray[z]);
                stage.add(snackLayer);
               indx++;
            }
          }
 
        function SetJar() {
            jar = new Kinetic.Image({
                image: jarImage,
                x: 200,
                y: 300,
                stroke: "red", //debug purpose
                opacity: .9    //debug purpose
            });
 
            jarLayer.add(jar);
            stage.add(jarLayer);
        }
 
                
         function SetFace() {
      
          character = new Kinetic.Image({
            image : characterImage,
            x : 50,
            y : 14,
           // opacity: .1,
            width : 240,
            height : 334
         });

         character.on("mouseout", function(){
                munchingFace.hide();
                face.show();
         });
       
          face = new Kinetic.Image({
            image : faceImage,
             x: 55,
             y: 50,
            opacity: .5,
            width: 150,
            height: 132
         });


         var animations = {
           FeedMe: [{
                x: 2,
                y: 160,
                 width: 150,
                 height: 132
            },
            {
                x: 175,
                y: 2,
                 width: 150,
                 height: 132
            }
            ,
            {
                x: 175,
                y: 160,
                 width: 150,
                 height: 132
            }
            ]
          }
 
 
            munchingFace = new Kinetic.Sprite({
                image: munchingFaceImage,
                x: 55,
                y: 50,
                width: 150,
                height: 132,
                opacity: .5,
                animation: 'FeedMe',
                animations: animations
            });
 
            characterLayer.add(character);
            stage.add(characterLayer);    
            faceLayer.add(face);
            stage.add(faceLayer);
            munchingFaceLayer.add(munchingFace);
            stage.add(munchingFaceLayer);
            munchingFace.start();
            munchingFace.hide();
           
        }
 
        function SetCommentBox(){
         comments = GenerateText("", 200, 100, "blue", 30, "bold", 400);
         commentLayer.add(comments);
            stage.add(commentLayer);
        }
       
        function DoBackground() {
            var bg = new Kinetic.Rect({
                height: 500,
                width: 400,
                x: 400,
                y: 0,
                fill: "#cccccc"
            });
            var bgLayer = new Kinetic.Layer();
            bgLayer.add(bg);
            stage.add(bgLayer);
        }
 
         function DoMath() {
            mathObj.num1 = GenerateRandomNum();
            mathObj.num2 = GenerateRandomNum();
            mathObj.answer = 0;
           
            switch (mathObj.ops) {
                case "+":
                    {
                 mathObj.answer = mathObj.num1 + mathObj.num2;
                        SetSnacks2(mathObj.num1 + mathObj.num2, 0);
                        break;
                    }
                case "-":
                    {
                        if (mathObj.num2 > mathObj.num1) {
                            var tmp = mathObj.num1;
                            mathObj.num1 = mathObj.num2;
                            mathObj.num2 = tmp;
                        }
 
                        if (mathObj.num2 == mathObj.num1) {
                            mathObj.num1++;
                        }
                        mathObj.answer = mathObj.num1 - mathObj.num2;
                        SetSnacks2(mathObj.num1, mathObj.num2);
                        break;
                    }
                case "*":
                    {
                        mathObj.answer = mathObj.num1 * mathObj.num2;
                        SetSnacks2(mathObj.num1 * mathObj.num2, "");
                        break;
                    }
                case "/":
                    {
                        break;
                    }
                default:
                    {
                        break;
                    }
                // mathObj.counter++;
            }
 
            var txtStr = mathObj.num1 + " " + mathObj.ops + " " + mathObj.num2;
           txtMathProblem.setText(txtStr);
            mathProblemLayer.moveToTop();
            stage.draw();
        }
 
       function ClearSnacks() {
        mathObj.eaten = 0;
        snackLayer.remove();
        face.show();
        mathObj.numClicks = 0;
            txtMathProblem.setText("");
           txtAnswer.setText("");
            $("#btnCalc").removeAttr("disabled");
            DoMath();
            
        }
 
       function CheckInJar(snack) {
           var putBack = snack.getId().substring(0, 3);
                  // put these back into jar
                if ((snack.attrs.x > 200 && snack.attrs.x < 262 && snack.attrs.y > 300 && snack.attrs.y < 382) && putBack == "jar"){
                    //$("#test").val(snack.getX());
                        snack.hide();
                        snack.setDraggable(false);
                        return false;
                }
                else {
                    // eat these
                    if (snack.attrs.x > 39 && snack.attrs.x < 185 && snack.attrs.y > 90 && snack.attrs.y < 147) {
                        munchingFace.show();
                        face.hide();
						snack.hide();
                        snack.setDraggable(false);
                        return true;
 }
                    else{
                        return false;
                    }
                }
        }
      
         function CheckAnswer() {
             if (mathObj.answer == txtAnswer.getText()) {
             $("#btnCalc").attr("disabled", "disabled");
               comments.setText("That's right");
             
                for (var s = 1; s < snackArray.length; s++) {
                 snackArray[s].setDraggable(true);
               
                 snackArray[s].on('dragend', function(){
                     if (CheckInJar(this)){
                     	mathObj.eaten++;
                     if (mathObj.eaten == mathObj.answer){
                     	ClearSnacks();}
                     };
               
                 });
                }
             }
            else {
             comments.setText("Sorry, try again");
             }
           
             commentLayer.moveToTop();
             stage.draw();
            
          var timer = setTimeout(function () {
       comments.setText("");
       stage.draw();
            
                 }, 1000);
       clearTimeOut(timer);
         }
 
   
        function GenerateText(txtStr, dx, dy, fColor, fSize, fStyle, fWidth) {
      
            return new Kinetic.Text({
                x: dx,
                y: dy,
                text: txtStr,
                fontSize: fSize,
                fontStyle: fStyle,
                fontFamily: "arial",
                textFill: fColor,
                width: fWidth,
                align: 'center',
                image: true
             });
 
        }
        function GenerateRandomNum() {
            // no zeros - redo for level 1?
            return Math.round(Math.random() * (mathObj.level * 10) + 1 );
         
        }
 
        $(document).ready(function () {
            $(".mainMenu a").click(function () {
                mathObj.ops = $(this).attr("rel");
                $(".mainMenu").addClass("hide");
                $(".levelSelect").removeClass("hide");
            });
 
            $(".levelSelect a").click( function () {
                level = $(this).attr("rel");
                $("h3").addClass("hide");
                $(".levelSelect").addClass("hide");
                $("#contentScreen").removeClass("hide");
                Init();
            });
          
        });
    </script>
</head>
<body>
    <div class="alignCenter">
        <h3>Cookie Math</h3>
        <h3> </h3>
        <div class="menu mainMenu">
           <a href="#" rel="+">Addition</a>
            <a href="#" rel="-">Subtraction</a>
            <a href="#" rel="*">Multiplication</a>
          
        </div>
        <div class="hide menu levelSelect">
          <a href="#" rel="1">Easy</a>
            <a href="#" rel="2">Medium</a>
            <a href="#" rel="3">I'm good</a>
         
        </div>
    </div>
    <div class="hide" id="contentScreen">
    <div id="canvasContainer" style="border:1px solid red;width:800px;height:500px"></div>
    	<div id="keyPadRow" class="absolute"></div>
      <input type="button" id="btnCalc" onclick="CheckAnswer()" value="Calculate" class="absolute"/>
      <input type="text" id="test" value=""/>
     </div>
</body>
</html>

