<!DOCTYPE>
<html class="no-js">
<head>
	<!--  Purpose: develop a game using kinetic.js, html 5 and existing javascript frameworks-->
	<!--  Coded by: twitter @ginhanlabs -->
	<!--  Website: http://ginhanlabs.blogspot.com -->
	
    <script src="jquery-1.8.2.min.js" type="text/javascript"></script>
    <script src="kinetic-v4.0.3.js" type="text/javascript"></script>
    <title></title>
    <style>
       
    @media screen 
    {
        .hide {display:none}
         .absolute{position:absolute;}
         #txtAnswer {height:4em;font-weight:bold;font-family:verdana;font-size:1em;z-index:100}
         .alignCenter {text-align:center}
         .menu a {border:1px solid red;padding:1em;display:block;width:5em;text-decoration:none;margin:auto;margin-bottom:.6em;}
         #btnCalc {left:540;top:450;}
    }
   
    </style>
    <script type="text/javascript">
        var snackImage = new Image();
        snackImage.src = "snack.png";
        snackImage.width = "30";
        snackImage.height = "30";


        var snackImage2 = new Image();
        snackImage2.src = "snack2.png";
        snackImage2.width = "30";
        snackImage2.height = "30";

        var snackArray = new Array();
        var jar;
        var jarImage = new Image();
        jarImage.src = "jar.png";
        jarImage.width = "90";
        jarImage.height = "108";

        var stage;
        var mathProblemLayer = new Kinetic.Layer();
        var commentLayer     = new Kinetic.Layer();
        var snackLayer  	 = new Kinetic.Layer();
        var jarLayer		 = new Kinetic.Layer()
        var comments;
        var txtMathProblem;
        
        var calcBtn;
        
		 var mathObj = {
            x: 430,
            y: 60,
            ops     : "",
            num1    : "",
            num2    : "",
            level   : 1,
            score   : 0,
           // counter : 0,
            answer  : 0,
            eaten	: 0
        }

    	function init() {

            stage = new Kinetic.Stage({
                width: 800,
                height: 500,
                container: "canvasContainer"
            });

           doBackground();
           setjar();
           setAnswerArea();
           setLayers();
           doMath();
           setCommentBox();
        }

		 function setLayers(){
			 txtMathProblem = generateText("", 400, 15, "green", 36, "bold", 400);
			 mathProblemLayer.add(txtMathProblem);
	         stage.add(mathProblemLayer);
		}
		 
        function setAnswerArea() {
            var canV = document.getElementById("canvasContainer");
            var $txtAns = $("#txtAnswer");
            $txtAns.css("top",canV.offsetHeight - 120);
            $txtAns.css("left",canV.offsetWidth - 300);
            $txtAns.val("");
         }

        function setSnacks2(amount, amount2) {
        	var dy = mathObj.y;
            var maxPerRow = 7;
            var tempImg = new Image();
            var startingX = dx = mathObj.x;
            var indx = 0;
          
            for (var z = amount; z > 0; z--) {
                
                if (indx % maxPerRow == 0) {
                        dy += 50;
                        dx = startingX;
                    }
                    else {
                        dx += 50;
                    }
                 
                if (z <= amount2) {
                    tempImg = snackImage2;
                    amount2--;
                }
                else {
                    tempImg = snackImage;
                }
                
            snackArray[z] = new Kinetic.Image({
                    id: "snack" + z,
                    x: dx,
                    y: dy,
                    image: tempImg,
                    draggable: false,
                   
                });
            
                snackLayer.add(snackArray[z]);
                stage.add(snackLayer); 
               indx++;
            }
          }

        function setjar() {
            jar = new Kinetic.Image({
                image: jarImage,
                x: 200,
                y: 300,
                stroke: "red", //debug purpose
                opacity: .4		//debug purpose
            });

            jarLayer.add(jar);
            stage.add(jarLayer);
        }

        function setCommentBox(){
        	comments = generateText("", 200, 100, "blue", 30, "bold", 400);
        	commentLayer.add(comments);
            stage.add(commentLayer); 
        }
        
        function doBackground() {
            var bg = new Kinetic.Rect({
                height: 500,
                width: 400,
                x: 400,
                y: 0,
                fill: "#cccccc"
            });
            var bgLayer = new Kinetic.Layer();
            bgLayer.add(bg);
            stage.add(bgLayer);
        }

         function doMath() {
			mathObj.num1 = generateRandomNum();
            mathObj.num2 = generateRandomNum();
            mathObj.answer = 0;
            
            switch (mathObj.ops) {
                case "+":
                    {
                		mathObj.answer = mathObj.num1 + mathObj.num2;
                        setSnacks2(mathObj.num1 + mathObj.num2, 0);
                        break;
                    }
                case "-":
                    {
                        if (mathObj.num2 > mathObj.num1) {
                            var tmp = mathObj.num1;
                            mathObj.num1 = mathObj.num2;
                            mathObj.num2 = tmp;
                        }

                        if (mathObj.num2 == mathObj.num1) {
                            mathObj.num1++;
                        }
                        mathObj.answer = mathObj.num1 - mathObj.num2;
                        setSnacks2(mathObj.num1, mathObj.num2);
                        break;
                    }
                case "*":
                    {
                        mathObj.answer = mathObj.num1 * mathObj.num2;
                        setSnacks2(mathObj.num1 * mathObj.num2, "");
                        break;
                    }
                case "/":
                    {
                        break;
                    }
                default: 
                    {
                        break;
                    }
                // mathObj.counter++;
            }

            var txtStr = mathObj.num1 + " " + mathObj.ops + " " + mathObj.num2;
           txtMathProblem.setText(txtStr);
           	mathProblemLayer.moveToTop();
           	stage.draw();
        }

       function clearSnacks() {
    	    mathObj.eaten  = 0;
    	    snackLayer.remove();
            txtMathProblem.setText("");
            $("#txtAnswer").val("");
            $("#btnCalc").removeAttr("disabled");
            doMath();
        }

       function checkInJar(snack) {
	         	
	       	if (snack.attrs.x > 200  && snack.attrs.x < 262  && snack.attrs.y > 300 && snack.attrs.y < 382) {
	       			snack.hide();
       				snack.setDraggable(false);
	       			return true;
	          }
           	  else {
           		  return false;
           	  }
      }
       	
         function checkAnswer() {
            var userAnswer = $("#txtAnswer").val();

             if (mathObj.answer == userAnswer) {
            	 $("#btnCalc").attr("disabled", "disabled");
               comments.setText("That's right");
              
                for (var s = 1; s < snackArray.length; s++) {
                	snackArray[s].setDraggable(true);
                	
                	snackArray[s].on('dragend', function(){
                		if (checkInJar(this)){
                			mathObj.eaten++;
                			if (mathObj.eaten == mathObj.answer){
                				clearSnacks();
                			}
                		};
                		
                	});
                }
             }
            else {
            	 comments.setText("Sorry, try again");
            	}
            
             commentLayer.moveToTop();
             stage.draw();
             
          var timer = setTimeout(function () {
      		  	comments.setText("");
      		  	stage.draw();
                 }, 1000); 
      	  clearTimeOut(timer);
         } 

    
        function generateText(txtStr, dx, dy, fColor, fSize, fStyle, fWidth) {
            return new Kinetic.Text({
                x: dx,
                y: dy,
                text: txtStr,
                fontSize: fSize,
                fontStyle: fStyle,
                fontFamily: "arial",
                textFill: fColor,
                width: fWidth,
                align: 'center',
             });

        }
        function generateRandomNum() {
            // no zeros - redo for level 1?
            return Math.round(Math.random() * (mathObj.level * 10) + 1 );
          
        }

        $(document).ready(function () {
            $(".mainMenu a").click(function () {
                mathObj.ops = $(this).attr("rel");
                $(".mainMenu").addClass("hide");
                $(".levelSelect").removeClass("hide");
            });

            $(".levelSelect a").click( function () {
                level = $(this).attr("rel");
                $("h3").addClass("hide");
                $(".levelSelect").addClass("hide");
                $("#contentScreen").removeClass("hide");
                init();
            });
           
        });
    </script>
</head>
<body>
    <div class="alignCenter">
        <h3>Cookie Math</h3>
        <h3> </h3>
        <div class="menu mainMenu">
           <a href="#" rel="+">Addition</a>
            <a href="#" rel="-">Subtraction</a>
            <a href="#" rel="*">Multiplication</a>
           
        </div>
        <div class="hide menu levelSelect">
          <a href="#" rel="1">Easy</a>
            <a href="#" rel="2">Medium</a>
            <a href="#" rel="3">I'm good</a>
          
        </div>
    </div>
   Answer correct, then drag items into square.
    <div class="hide" id="contentScreen">
    <div id="canvasContainer" style="border:1px solid red;width:800px;height:500px"></div>
      <input type="text" id="txtAnswer" class="absolute" value=""/>
      <input type="button" id="btnCalc" onclick="checkAnswer()" value="Calculate" class="absolute"/>
      <input type="text" id="test"  value=""/>
     </div>
</body>
</html>

